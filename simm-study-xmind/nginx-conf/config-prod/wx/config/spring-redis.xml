<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.3.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-4.3.xsd ">
  
	<!-- <context:property-placeholder ignore-unresolvable="true" location="classpath:properties/redis.properties" /> -->
    <bean
        class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <property name="maxInactiveIntervalInSeconds" value="1800" />
    </bean>
      <!-- 连接池配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
	<!-- 最大连接数 -->
	<property name="maxTotal" value="${redis.maxTotal}" />
	<!-- 最大空闲连接数 -->
	<property name="maxIdle" value="${redis.maxIdle}" />
	<!-- 最小空闲连接数 -->
	<property name="minIdle" value="${redis.minIdle}" />
	<!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
	<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
	<!-- 每次释放连接的最大数目 -->
	<property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />
	<!-- 释放连接的扫描间隔（毫秒） -->
	<property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
	<!-- 连接最小空闲时间 -->
	<property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
	<!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
	<property name="softMinEvictableIdleTimeMillis" value="${redis.softMinEvictableIdleTimeMillis}" />
	<!-- 在获取连接的时候检查有效性, 默认false -->
	<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	<!-- 在空闲时检查有效性, 默认false -->
	<property name="testWhileIdle" value="${redis.testWhileIdle}" />
	<!-- 在归还给pool时，是否提前进行validate操作 -->
	<property name="testOnReturn" value="${redis.testOnReturn}" />
	<!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
	<property name="blockWhenExhausted" value="${redis.blockWhenExhausted}" />
	</bean>

    <bean id="clusterRedisNodes1" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host1}" />
        <constructor-arg value="${redis.port1}" type="int" />
    </bean>
    
    
    
    <bean id="redisClusterConfiguration"
        class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <property name="clusterNodes">
            <set>
                <ref bean="clusterRedisNodes1" />
            </set>
        </property>
        <property name="maxRedirects" value="${redis.maxRedirects}"/>
    </bean>
    <!-- Redis连接 -->
    <bean id="jedisConnectionFactory"
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg ref="jedisPoolConfig" />
        <property name="password" value="${redis.password}"></property>
        <constructor-arg ref="redisClusterConfiguration" />
    </bean>
    <!-- 缓存序列化方式 -->
    <bean id="keySerializer"
        class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="valueSerializer"
        class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
    <!-- 缓存 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer" ref="keySerializer" />
        <property name="valueSerializer" ref="valueSerializer" />
        <property name="hashKeySerializer" ref="keySerializer" />
        <property name="hashValueSerializer" ref="valueSerializer" />
        <!--开启事务  -->
        <property name="enableTransactionSupport" value="false"></property>
    </bean>
    <bean id="redisUtil" class="com.redis.RedisUtil">
    	<property name="redisTemplate" ref="redisTemplate" />
    </bean>
    <bean id="jedisClient" class="com.redis.JedisClientSingle">
    	<property name="redisUtil" ref="redisUtil" />
    </bean>
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg index="0" ref="redisTemplate" />
        <property name="defaultExpiration" value="${redis.expiration}" />
    </bean>
   

</beans>
