<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.3.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-4.3.xsd ">
  
	<!-- <context:property-placeholder ignore-unresolvable="true" location="classpath:properties/redis.properties" /> -->
   <!--  <bean
        class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <property name="maxInactiveIntervalInSeconds" value="1800" />
    </bean> -->
      <!-- 连接池配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
	<!-- 最大连接数 -->
	<property name="maxTotal" value="${redis.maxTotal}" />
	<!-- 最大空闲连接数 -->
	<property name="maxIdle" value="${redis.maxIdle}" />
	<!-- 最小空闲连接数 -->
	<property name="minIdle" value="${redis.minIdle}" />
	<!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
	<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
	<!-- 每次释放连接的最大数目 -->
	<property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />
	<!-- 释放连接的扫描间隔（毫秒） -->
	<property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
	<!-- 连接最小空闲时间 -->
	<property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
	<!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
	<property name="softMinEvictableIdleTimeMillis" value="${redis.softMinEvictableIdleTimeMillis}" />
	<!-- 在获取连接的时候检查有效性, 默认false -->
	<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	<!-- 在空闲时检查有效性, 默认false -->
	<property name="testWhileIdle" value="${redis.testWhileIdle}" />
	<!-- 在归还给pool时，是否提前进行validate操作 -->
	<property name="testOnReturn" value="${redis.testOnReturn}" />
	<!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
	<property name="blockWhenExhausted" value="${redis.blockWhenExhausted}" />
	</bean>

   <bean id="clusterRedisNodes" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host}" />
        <constructor-arg value="${redis.port}" type="int" />
    </bean>
	
	<!--
    <bean id="clusterRedisNodes1" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host1}" />
        <constructor-arg value="${redis.port1}" type="int" />
    </bean>
    <bean id="clusterRedisNodes2" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host2}" />
        <constructor-arg value="${redis.port2}" type="int" />
    </bean>
    <bean id="clusterRedisNodes3" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host3}" />
        <constructor-arg value="${redis.port3}" type="int" />
    </bean>
    <bean id="clusterRedisNodes4" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host4}" />
        <constructor-arg value="${redis.port4}" type="int" />
    </bean>
    <bean id="clusterRedisNodes5" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host5}" />
        <constructor-arg value="${redis.port5}" type="int" />
    </bean>
    <bean id="clusterRedisNodes6" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host6}" />
        <constructor-arg value="${redis.port6}" type="int" />
    </bean>
	-->
    <!-- 
    <bean id="clusterRedisNodes7" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host7}" />
        <constructor-arg value="${redis.port7}" type="int" />
    </bean>
    <bean id="clusterRedisNodes8" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host8}" />
        <constructor-arg value="${redis.port8}" type="int" />
    </bean>
    <bean id="clusterRedisNodes9" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host9}" />
        <constructor-arg value="${redis.port9}" type="int" />
    </bean>
    <bean id="clusterRedisNodes10" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host10}" />
        <constructor-arg value="${redis.port10}" type="int" />
    </bean>

   <bean id="clusterRedisNodes11" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host11}" />
        <constructor-arg value="${redis.port11}" type="int" />
    </bean>
    <bean id="clusterRedisNodes12" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host12}" />
        <constructor-arg value="${redis.port12}" type="int" />
    </bean>
    <bean id="clusterRedisNodes13" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host13}" />
        <constructor-arg value="${redis.port13}" type="int" />
    </bean>
    <bean id="clusterRedisNodes14" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host14}" />
        <constructor-arg value="${redis.port14}" type="int" />
    </bean>
    <bean id="clusterRedisNodes15" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host15}" />
        <constructor-arg value="${redis.port15}" type="int" />
    </bean>
    <bean id="clusterRedisNodes16" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host16}" />
        <constructor-arg value="${redis.port16}" type="int" />
    </bean>
    <bean id="clusterRedisNodes17" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host17}" />
        <constructor-arg value="${redis.port17}" type="int" />
    </bean>
    <bean id="clusterRedisNodes18" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host18}" />
        <constructor-arg value="${redis.port18}" type="int" />
    </bean>
    <bean id="clusterRedisNodes19" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host19}" />
        <constructor-arg value="${redis.port19}" type="int" />
    </bean>
    <bean id="clusterRedisNodes20" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host20}" />
        <constructor-arg value="${redis.port20}" type="int" />
    </bean>
    
    <bean id="clusterRedisNodes21" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host21}" />
        <constructor-arg value="${redis.port21}" type="int" />
    </bean>
    <bean id="clusterRedisNodes22" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host22}" />
        <constructor-arg value="${redis.port22}" type="int" />
    </bean>
    <bean id="clusterRedisNodes23" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host23}" />
        <constructor-arg value="${redis.port23}" type="int" />
    </bean>
    <bean id="clusterRedisNodes24" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host24}" />
        <constructor-arg value="${redis.port24}" type="int" />
    </bean>
    <bean id="clusterRedisNodes25" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host25}" />
        <constructor-arg value="${redis.port25}" type="int" />
    </bean>
    <bean id="clusterRedisNodes26" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host26}" />
        <constructor-arg value="${redis.port26}" type="int" />
    </bean>
    <bean id="clusterRedisNodes27" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host27}" />
        <constructor-arg value="${redis.port27}" type="int" />
    </bean>
    <bean id="clusterRedisNodes28" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host28}" />
        <constructor-arg value="${redis.port28}" type="int" />
    </bean>
    <bean id="clusterRedisNodes29" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host29}" />
        <constructor-arg value="${redis.port29}" type="int" />
    </bean>
    <bean id="clusterRedisNodes30" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host30}" />
        <constructor-arg value="${redis.port30}" type="int" />
    </bean>
    <bean id="clusterRedisNodes31" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host31}" />
        <constructor-arg value="${redis.port31}" type="int" />
    </bean>
    <bean id="clusterRedisNodes32" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="${redis.host32}" />
        <constructor-arg value="${redis.port32}" type="int" />
    </bean>
     -->
    
    
    <bean id="redisClusterConfiguration"
        class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <property name="clusterNodes">
            <set>
			    <ref bean="clusterRedisNodes" />
               <!-- <ref bean="clusterRedisNodes1" />
                <ref bean="clusterRedisNodes2" />
                <ref bean="clusterRedisNodes3" />
                <ref bean="clusterRedisNodes4" />
                <ref bean="clusterRedisNodes5" />
                <ref bean="clusterRedisNodes6" /> -->
                <!-- <ref bean="clusterRedisNodes7" />
                <ref bean="clusterRedisNodes8" />
                <ref bean="clusterRedisNodes9" />
                <ref bean="clusterRedisNodes10" />
                <ref bean="clusterRedisNodes11" />
                <ref bean="clusterRedisNodes12" />
                <ref bean="clusterRedisNodes13" />
                <ref bean="clusterRedisNodes14" />
                <ref bean="clusterRedisNodes15" />
                <ref bean="clusterRedisNodes16" />
                <ref bean="clusterRedisNodes17" />
                <ref bean="clusterRedisNodes18" />
                <ref bean="clusterRedisNodes19" />
                <ref bean="clusterRedisNodes20" />
                <ref bean="clusterRedisNodes21" />
                <ref bean="clusterRedisNodes22" />
                <ref bean="clusterRedisNodes23" />
                <ref bean="clusterRedisNodes24" />
                <ref bean="clusterRedisNodes25" />
                <ref bean="clusterRedisNodes26" />
                <ref bean="clusterRedisNodes27" />
                <ref bean="clusterRedisNodes28" />
                <ref bean="clusterRedisNodes29" />
                <ref bean="clusterRedisNodes30" />
                <ref bean="clusterRedisNodes31" />
                <ref bean="clusterRedisNodes32" /> -->
            </set>
        </property>
        <property name="maxRedirects" value="${redis.maxRedirects}"/>
    </bean>
    <!-- Redis连接 -->
    <bean id="jedisConnectionFactory"
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg ref="jedisPoolConfig" />
        <property name="password" value="${redis.password}"></property>
        <constructor-arg ref="redisClusterConfiguration" />
    </bean>
    <!-- 缓存序列化方式 -->
    <bean id="keySerializer"
        class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="valueSerializer"
        class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
    <!-- 缓存 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer" ref="keySerializer" />
        <property name="valueSerializer" ref="valueSerializer" />
        <property name="hashKeySerializer" ref="keySerializer" />
        <property name="hashValueSerializer" ref="valueSerializer" />
        <!--开启事务  -->
        <property name="enableTransactionSupport" value="false"></property>
    </bean>
    <bean id="redisUtil" class="com.redis.RedisUtil">
    	<property name="redisTemplate" ref="redisTemplate" />
    </bean>
    <bean id="jedisClient" class="com.redis.JedisClientSingle">
    	<property name="redisUtil" ref="redisUtil" />
    </bean>
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg index="0" ref="redisTemplate" />
        <property name="defaultExpiration" value="${redis.expiration}" />
    </bean>
   

</beans>
